/**
 * Generated by orval v6.18.1 🍺
 * Do not edit manually.
 * Springdoc
 * Springdoc을 사용한 Swagger UI
 * OpenAPI spec version: 1.0.0
 */
import type {
  UpdateAlarm200,
  AlarmRequest,
  UpdateAlarmEnabled200,
  AlarmEnabledRequest,
  InsertAlarm200,
  RefreshLocationForWeather200,
  RefreshLocationForWeatherParams,
  GetLocationForWeather200,
  GetLocationForWeatherParams,
  MemberDelete200,
  MemberDeleteParams,
  GetLocation200,
  GetLocationParams,
  Login200,
  LoginParams,
  GetAlarmLocationWeather200,
  GetAlarmLocationWeatherParams,
  GetAlarmLocationWeatherDetail200,
  GetAlarmLocationWeatherDetailParams,
  GetAlarmList200,
  GetAlarmListParams,
  GetAlarmDetail200,
  GetAlarmDetailParams,
  DeleteAlarm200,
  AlarmDeleteRequest,
} from "./model";
import { getInstance } from "./api.mutator";
import type { BodyType } from "./api.mutator";

// eslint-disable-next-line
type SecondParameter<T extends (...args: any) => any> = T extends (
  config: any,
  args: infer P,
) => any
  ? P
  : never;

/**
 * 알람 수정
 * @summary 알람 수정
 */
export const updateAlarm = (
  alarmRequest: BodyType<AlarmRequest>,
  options?: SecondParameter<typeof getInstance>,
) => {
  return getInstance<UpdateAlarm200>(
    {
      url: `/alarm/updateAlarm`,
      method: "put",
      headers: { "Content-Type": "application/json;charset=UTF-8" },
      data: alarmRequest,
    },
    options,
  );
};

/**
 * 알람 사용여부 변경
 * @summary 알람 사용여부 변경
 */
export const updateAlarmEnabled = (
  alarmEnabledRequest: BodyType<AlarmEnabledRequest>,
  options?: SecondParameter<typeof getInstance>,
) => {
  return getInstance<UpdateAlarmEnabled200>(
    {
      url: `/alarm/updateAlarmEnabled`,
      method: "put",
      headers: { "Content-Type": "application/json;charset=UTF-8" },
      data: alarmEnabledRequest,
    },
    options,
  );
};

/**
 * 알람 등록
 * @summary 알람 등록
 */
export const insertAlarm = (
  alarmRequest: BodyType<AlarmRequest>,
  options?: SecondParameter<typeof getInstance>,
) => {
  return getInstance<InsertAlarm200>(
    {
      url: `/alarm/insertAlarm`,
      method: "post",
      headers: { "Content-Type": "application/json;charset=UTF-8" },
      data: alarmRequest,
    },
    options,
  );
};

/**
 * 지역코드와 갱신타입을 입력하면 해당 지역의 날씨를 갱신하여 DB를 저장하고 조회
 * @summary 지역별 날씨갱신
 */
export const refreshLocationForWeather = (
  params: RefreshLocationForWeatherParams,
  options?: SecondParameter<typeof getInstance>,
) => {
  return getInstance<RefreshLocationForWeather200>(
    { url: `/weather/refreshLocationForWeather`, method: "get", params },
    options,
  );
};

/**
 * 지역코드와 기준날짜를 입력하면 날씨DB를 조회(지역코드는 /location/getLocation에서 조회가능하다.)
 * @summary 지역별 날씨
 */
export const getLocationForWeather = (
  params: GetLocationForWeatherParams,
  options?: SecondParameter<typeof getInstance>,
) => {
  return getInstance<GetLocationForWeather200>(
    { url: `/weather/getLocationForWeather`, method: "get", params },
    options,
  );
};

/**
 * 탈퇴
 * @summary 탈퇴
 */
export const memberDelete = (
  params: MemberDeleteParams,
  options?: SecondParameter<typeof getInstance>,
) => {
  return getInstance<MemberDelete200>(
    { url: `/memberInfo/delete`, method: "get", params },
    options,
  );
};

/**
 * 주소를 입력하여 해당 주소의 법정동코드를 조회 (읍면동까지만 표시) 임시로 500개의 주소를 읍면동으로 그룹화 하기 때문에 그 이상의 결과는 제외한다.
 * @summary 주소 조회
 */
export const getLocation = (
  params: GetLocationParams,
  options?: SecondParameter<typeof getInstance>,
) => {
  return getInstance<GetLocation200>(
    { url: `/location/getLocation`, method: "get", params },
    options,
  );
};

/**
 * 로그인
 * @summary 로그인
 */
export const login = (
  params: LoginParams,
  options?: SecondParameter<typeof getInstance>,
) => {
  return getInstance<Login200>(
    { url: `/auth/login`, method: "get", params },
    options,
  );
};

/**
 * 알람지역별날씨 조회
 * @summary 알람지역별날씨 조회
 */
export const getAlarmLocationWeather = (
  params: GetAlarmLocationWeatherParams,
  options?: SecondParameter<typeof getInstance>,
) => {
  return getInstance<GetAlarmLocationWeather200>(
    { url: `/alarm/getAlarmLocationWeather`, method: "get", params },
    options,
  );
};

/**
 * 알람지역별날씨 상세보기
 * @summary 알람지역별날씨 상세보기
 */
export const getAlarmLocationWeatherDetail = (
  params: GetAlarmLocationWeatherDetailParams,
  options?: SecondParameter<typeof getInstance>,
) => {
  return getInstance<GetAlarmLocationWeatherDetail200>(
    { url: `/alarm/getAlarmLocationWeatherDetail`, method: "get", params },
    options,
  );
};

/**
 * 알람리스트 조회
 * @summary 알람리스트 조회
 */
export const getAlarmList = (
  params: GetAlarmListParams,
  options?: SecondParameter<typeof getInstance>,
) => {
  return getInstance<GetAlarmList200>(
    { url: `/alarm/getAlarmList`, method: "get", params },
    options,
  );
};

/**
 * 알람 조회
 * @summary 알람 조회
 */
export const getAlarmDetail = (
  params: GetAlarmDetailParams,
  options?: SecondParameter<typeof getInstance>,
) => {
  return getInstance<GetAlarmDetail200>(
    { url: `/alarm/getAlarmDetail`, method: "get", params },
    options,
  );
};

/**
 * 알람삭제
 * @summary 알람삭제
 */
export const deleteAlarm = (
  alarmDeleteRequest: BodyType<AlarmDeleteRequest>,
  options?: SecondParameter<typeof getInstance>,
) => {
  return getInstance<DeleteAlarm200>(
    {
      url: `/alarm/deleteAlarm`,
      method: "delete",
      headers: { "Content-Type": "application/json;charset=UTF-8" },
      data: alarmDeleteRequest,
    },
    options,
  );
};

export type UpdateAlarmResult = NonNullable<
  Awaited<ReturnType<typeof updateAlarm>>
>;
export type UpdateAlarmEnabledResult = NonNullable<
  Awaited<ReturnType<typeof updateAlarmEnabled>>
>;
export type InsertAlarmResult = NonNullable<
  Awaited<ReturnType<typeof insertAlarm>>
>;
export type RefreshLocationForWeatherResult = NonNullable<
  Awaited<ReturnType<typeof refreshLocationForWeather>>
>;
export type GetLocationForWeatherResult = NonNullable<
  Awaited<ReturnType<typeof getLocationForWeather>>
>;
export type MemberDeleteResult = NonNullable<
  Awaited<ReturnType<typeof memberDelete>>
>;
export type GetLocationResult = NonNullable<
  Awaited<ReturnType<typeof getLocation>>
>;
export type LoginResult = NonNullable<Awaited<ReturnType<typeof login>>>;
export type GetAlarmLocationWeatherResult = NonNullable<
  Awaited<ReturnType<typeof getAlarmLocationWeather>>
>;
export type GetAlarmLocationWeatherDetailResult = NonNullable<
  Awaited<ReturnType<typeof getAlarmLocationWeatherDetail>>
>;
export type GetAlarmListResult = NonNullable<
  Awaited<ReturnType<typeof getAlarmList>>
>;
export type GetAlarmDetailResult = NonNullable<
  Awaited<ReturnType<typeof getAlarmDetail>>
>;
export type DeleteAlarmResult = NonNullable<
  Awaited<ReturnType<typeof deleteAlarm>>
>;
